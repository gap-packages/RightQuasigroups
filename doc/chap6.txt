  
  [1X6 [33X[0;0YNilpotency and solvability[133X[101X
  
  [33X[0;0YNilpotency  and  solvability  are  well-developed  for loops but less so for
  quasigroups  and  right  quasigroups. Many methods described in this chapter
  therefore apply only to loops.[133X
  
  
  [1X6.1 [33X[0;0YNuclei, commutant and center[133X[101X
  
  [33X[0;0YThe [13Xright nucleus[113X (resp. [13Xmiddle nucleus[113X, [13Xleft nucleus[113X) of a right quasigroup
  [23XQ[123X  is  the  set  [23X\mathrm{Nuc}_r(Q) = \{z\in Q:x(yz)=(xy)z[123X for all [23Xx,y\in Q\}[123X
  (resp.   [23X\mathrm{Nuc}_m(Q)  =  \{y\in  Q:x(yz)=(xy)z[123X  for  all  [23Xx,z\in  Q\}[123X,
  [23X\mathrm{Nuc}_\ell(Q) = \{x\in Q:x(yz)=(xy)z[123X for all [23Xy,z\in Q\}[123X). The [13Xnucleus[113X
  [23X\mathrm{Nuc}(Q)[123X of [23XQ[123X is the intesection of the three nuclei.[133X
  
  [33X[0;0YIn  the  finite  case,  each  of the four nuclei is either an empty set or a
  subalgebra. For loops, each of the four nuclei is always a subloop.[133X
  
  [33X[0;0YThe  [13Xcommutant[113X  of  a  right  quasigroup  [23XQ[123X is the possibly empty set [23X\{x\in
  Q:xy=yx[123X  for  all [23Xy\in Q\}[123X. In the case of loops, the neutral element always
  belongs to the commutant.[133X
  
  [33X[0;0YThe  [13Xcenter[113X of a right quasigroup is the intersection of the nucleus and the
  commutant. In the case of loops, the center is always a normal subloop.[133X
  
  
  [1X6.1-1 [33X[0;0YNuclei[133X[101X
  
  [33X[1;0Y[29X[2XRightNucleus[102X( [3XQ[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XMiddleNucleus[102X( [3XQ[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XLeftNucleus[102X( [3XQ[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XNuc[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe  (right, middle, left) nucleus of a right quasigroup [10XQ[110X, either
            as the empty set or as a subalgebra of [10XQ[110X.[133X
  
  [33X[0;0YWe  also  support the synonyms [10XNucleusOfRightQuasigroup[110X, [10XNucleusOfQuasigroup[110X
  and [10XNucleusOfLoop[110X of [10XNuc[110X.[133X
  
  [1X6.1-2 Commutant[101X
  
  [33X[1;0Y[29X[2XCommutant[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe commutant of the rigt quasigroup [10XQ[110X, a possibly empty subset of
            [10XQ[110X.[133X
  
  [1X6.1-3 Center[101X
  
  [33X[1;0Y[29X[2XCenter[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe  center  of the right quasigroup [10XQ[110X, a possibly empty subset of
            [10XQ[110X.[133X
  
  
  [1X6.2 [33X[0;0YNilpotency for loops[133X[101X
  
  [33X[0;0YThe  [13Xnilpotency  class[113X of a loop [23XQ[123X is defined inductively by [23Xcl(Q)=1[123X if [23XQ[123X is
  an  abelian  group and by [23Xcl(Q)=cl(Q/Z(Q))+1[123X, if this process terminates, in
  which case [10XQ[110X is [13Xnilpotent[113X.[133X
  
  [1X6.2-1 NilpotencyClassOfLoop[101X
  
  [33X[1;0Y[29X[2XNilpotencyClassOfLoop[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe nilpotency class of a loop [10XQ[110X. When [10XQ[110X is not nilpotent, returns
            [10Xfail[110X.[133X
  
  [1X6.2-2 IsNilpotentLoop[101X
  
  [33X[1;0Y[29X[2XIsNilpotentLoop[102X( [3XQ[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10Xtrue[110X   if   [10XQ[110X  is  a  nilpotent  loop,  else  returns  [10Xfalse[110X.  The
            non-qualified  version  [10XIsNilpotent[110X is also supported, cf. Section
            [14X1.10[114X.[133X
  
  [1X6.2-3 UpperCentralSeriesOfLoop[101X
  
  [33X[1;0Y[29X[2XUpperCentralSeriesOfLoop[102X( [3XQ[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe  upper  central  series  of  the  loop  [10XQ[110X, that is, the series
            [23X[Z_0(Q),  Z_1(Q),  Z_2(Q),  ...][123X, where [23XZ_0(Q)=1[123X and [23XZ_{n+1}(Q)[123X is
            the  preimage  of  [23XZ(Q/Z_n(Q))[123X under the canonical projection [23XQ\to
            Q/Z_n(Q)[123X.  The  function  returns  the longest strictly increasing
            segment  of  the  upper  central series. The non-qualified version
            [10XUpperCentralSeries[110X is also supported.[133X
  
  [1X6.2-4 LowerCentralSeriesOfLoop[101X
  
  [33X[1;0Y[29X[2XLowerCentralSeriesOfLoop[102X( [3XQ[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe  lower  central  series  of  the  loop  [10XQ[110X, that is, the series
            [23XQ=Q_{(0)}\ge  Q_{(1)}\ge  Q_{(2)}\ge  \dots[123X such that [23XQ_{(i+1)}[123X is
            the  smallest  normal  subloop of [23XQ[123X such that [23XQ_{(i)}/Q_{(i+1)}\le
            Z(Q/Q_{(i+1)})[123X.   The   function   returns  the  longest  strictly
            decreasing  segment of the lower central series. The non-qualified
            version [10XLowerCentralSeries[110X is also supported.[133X
  
  
  [1X6.3 [33X[0;0YSolvability and congruence solvability for loops[133X[101X
  
  [33X[0;0YThere  are  two competing notions of solvability in loop theory and both are
  supported in [5XRightQuasigroups[105X.[133X
  
  [33X[0;0YA   loop  [23XQ[123X  is  [13Xclassically  solvable[113X  if  there  exists  a  series  [23XQ=Q_0>
  Q_1>\dots>Q_n=1[123X  such  that  [23XQ_i\unlhd  Q[123X  and  [23XQ_i/Q_{i+1}[123X is a commutative
  group.  To conform with historical terminology, we call classically solvable
  loops [13Xsolvable[113X.[133X
  
  [33X[0;0YThere  is  a  well-established  universal-algebraic notion of commutators of
  congruences  in  congruence-modular varieties, which includes the variety of
  loops. We denote by [23X[A,B]_Q[123X this commutator of two normal subloops [23XA[123X, [23XB[123X of a
  loop [23XQ[123X. A normal subloop [23XA[123X is [13Xabelian in[113X [23XQ[123X if [23X[A,A]_Q=1[123X. If a normal subloop
  [23XA[123X  is  abelian  in [23XQ[123X then [23XA[123X is a commutative group, but not necessarily vice
  versa.[133X
  
  [33X[0;0YA  loop  [23XQ[123X  is  then  [13Xcongruence  solvable[113X  if  there exists a series [23XQ=Q_0>
  Q_1>\dots>Q_n=1[123X  such  that  [23XQ_i\unlhd  Q[123X  and  [23XQ_i/Q_{i+1}[123X  is  abelian  in
  [23XQ/Q_{i+1}[123X. Universally-algebraically speaking, this is the correct notion of
  solvablity for loops. Every congruence solvable loop is classically solvable
  but  not  necessarily  vice  versa. A group is congruence solvable iff it is
  classically solvable.[133X
  
  [1X6.3-1 AssociatorSubloop[101X
  
  [33X[1;0Y[29X[2XAssociatorSubloop[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe  [13Xassociator subloop[113X of [10XQ[110X, that is, the smallest normal subloop
            of [10XQ[110X containing all associators.[133X
  
  [1X6.3-2 IsSolvableLoop[101X
  
  [33X[1;0Y[29X[2XIsSolvableLoop[102X( [3XQ[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10Xtrue[110X  if  [10XQ[110X  is a (classically) solvable loop, else returns [10Xfalse[110X.
            The non-qualified version [10XIsSolvable[110X is also supported.[133X
  
  [1X6.3-3 DerivedSubloop[101X
  
  [33X[1;0Y[29X[2XDerivedSubloop[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe  [13Xderived  subloop[113X of [10XQ[110X, that is, the smallest normal subloop [10XA[110X
            of  [10XQ[110X  such that [10XQ/A[110X is an abelian group. Note that this coincides
            with the congruence derived subloop [23X[Q,Q]_Q[123X and there is therefore
            no need for [10XCongruenceDerivedSubloop[110X.[133X
  
  [1X6.3-4 DerivedSeriesOfLoop[101X
  
  [33X[1;0Y[29X[2XDerivedSeriesOfLoop[102X( [3XQ[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe  derived  series of [10XQ[110X. If [23XQ'[123X denotes the derived subloop of [23XQ[123X,
            then  the  derived  series  is  the  series  [23X[Q,Q',Q'',\dots][123X. The
            function  returns  the longest strictly decreasing initial segment
            of  the derived series. The non-qualified version [10XDerivedSeries[110X is
            also supported.[133X
  
  [1X6.3-5 DerivedLength[101X
  
  [33X[1;0Y[29X[2XDerivedLength[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe  number  of  steps in the derived series of the loop [10XQ[110X if [10XQ[110X is
            solvable, else returns [10Xfail[110X.[133X
  
  [33X[0;0YThe following methods deal with congruence solvability of loops.[133X
  
  [1X6.3-6 CommutatorOfNormalSubloops[101X
  
  [33X[1;0Y[29X[2XCommutatorOfNormalSubloops[102X( [3XQ[103X, [3XA[103X, [3XB[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe  commutator  of  normal  subloops [10XA[110X, [10XB[110X of the loop [10XQ[110X, that is,
            [23X[A,B]_Q[123X.  For finite loops, [23X[A,B]_Q[123X is the smallest normal subloop
            of   [23XQ[123X   contaning   the  elements  [23XR_{b_1,c_1}(a)/R_{b_2,c_2}(a)[123X,
            [23XL_{b_1,c_1}(a)/L_{b_2,c_2}(a)[123X,  [23XT_{b_1}(a)/T_{b_2}(a)[123X,  where [23Xa\in
            A[123X,  [23Xb_1/b_2\in B[123X, [23Xc_1/c_2\in B[123X and where [23XR_{x,y}[123X, [23XL_{x,y}[123X, [23XT_x[123X are
            the standard inner mappings of [23XQ[123X.[133X
  
  [1X6.3-7 IsAbelianNormalSubloop[101X
  
  [33X[1;0Y[29X[2XIsAbelianNormalSubloop[102X( [3XQ[103X, [3XA[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10Xtrue[110X  if [10XA[110X is an abelian (in the universal-algebraic sense) normal
            subloop of the loop [10XQ[110X, else returns [10Xfalse[110X. A normal subloop [23XA[123X of [23XQ[123X
            is abelian in [23XQ[123X if [23X[A,A]_Q=1[123X.[133X
  
  [1X6.3-8 IsCongruenceSolvableLoop[101X
  
  [33X[1;0Y[29X[2XIsCongruenceSolvableLoop[102X( [3XQ[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10Xtrue[110X if [10XQ[110X is a congruence solvable loop, else returns [10Xfalse[110X.[133X
  
  [1X6.3-9 CongruenceDerivedSeriesOfLoop[101X
  
  [33X[1;0Y[29X[2XCongruenceDerivedSeriesOfLoop[102X( [3XQ[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe congruence derived series of [10XQ[110X. With [23XQ^{(0)}=Q[123X and [23XQ^{(i+1)} =
            [Q^{(i)},Q^{(i)}]_Q[123X,        this        is        the       series
            [23X[Q^{(0)},Q^{(1)},Q^{(2)},\dots][123X.  The function returns the longest
            strictly  decreasing  initial  segment  of  the congruence derived
            series.[133X
  
  [1X6.3-10 CongruenceDerivedLength[101X
  
  [33X[1;0Y[29X[2XCongruenceDerivedLength[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe number of steps in the congruence derived series of the loop [10XQ[110X
            if [10XQ[110X is congruence solvable, else returns [10Xfail[110X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xuset := Union( List([0..3], i-> [[i,0],[i,1]] ) ); # the underlying set[127X[104X
    [4X[28X[ [ 0, 0 ], [ 0, 1 ], [ 1, 0 ], [ 1, 1 ], [ 2, 0 ], [ 2, 1 ], [128X[104X
    [4X[28X  [ 3, 0 ], [ 3, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27Xct := [[0,1,2,3],[1,3,0,2],[2,0,3,1],[3,2,1,0]];;[127X[104X
    [4X[25Xgap>[125X [27Xmult := function( x, y )[127X[104X
    [4X[25X>[125X [27X        if x[2]=0 or y[2]=0 then[127X[104X
    [4X[25X>[125X [27X                return [ (x[1]+y[1]) mod 4, (x[2]+y[2]) mod 2 ];[127X[104X
    [4X[25X>[125X [27X        else[127X[104X
    [4X[25X>[125X [27X                return [ ct[x[1]+1,y[1]+1], (x[2]+y[2]) mod 2 ];[127X[104X
    [4X[25X>[125X [27X        fi;[127X[104X
    [4X[25X>[125X [27X  end;[127X[104X
    [4X[28Xfunction( x, y ) ... end[128X[104X
    [4X[25Xgap>[125X [27XQ := LoopByFunction( uset, mult ); # Z_4 x Z_2 with one quandrant "replaced" with ct[127X[104X
    [4X[28X<loop of size 8>[128X[104X
    [4X[25Xgap>[125X [27XDerivedSeries( Q );[127X[104X
    [4X[28X[ <loop of size 8>, <loop of size 4>, [128X[104X
    [4X[28X  <trivial group with 1 generator> ][128X[104X
    [4X[25Xgap>[125X [27XIsSolvable( Q );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XDerivedLength( Q );[127X[104X
    [4X[28X2[128X[104X
    [4X[25Xgap>[125X [27XC := CommutatorOfNormalSubloops(Q,Q,Q); # congruence derived subloop = derived subloop[127X[104X
    [4X[28X<loop of size 4>[128X[104X
    [4X[25Xgap>[125X [27XD := CommutatorOfNormalSubloops(Q,C,C); # 2nd congruence derived subloop differs from 2nd derived subloop[127X[104X
    [4X[28X<loop of size 4>[128X[104X
    [4X[25Xgap>[125X [27XCongruenceDerivedSeriesOfLoop( Q );[127X[104X
    [4X[28X[ <loop of size 8>, <loop of size 4> ][128X[104X
    [4X[25Xgap>[125X [27XIsCongruenceSolvableLoop( Q );[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XCongruenceDerivedLength( Q );[127X[104X
    [4X[28Xfail[128X[104X
    [4X[25Xgap>[125X [27XIsCommutative( C ) and IsAssociative( C ) and IsNormal( Q, C ); # commutative group, normal in Q[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsAbelianNormalSubloop( Q, C ); # but not abelian in Q[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  
  [1X6.4 [33X[0;0YNuclear and central extensions of loops[133X[101X
  
  [33X[0;0YA  loop  [23XQ[123X is an [13Xextension[113X of [23XK[123X by [23XF[123X if [23XK[123X is a normal subloop of [23XQ[123X such that
  [23XQ/K[123X  is  isomorphic  to [23XF[123X. If [23XK[123X is in the nucleus of [23XQ[123X then the extension is
  [13Xnuclear[113X, while if [23XK[123X is in the center of [23XQ[123X then the enxtension is [13Xcentral[113X.[133X
  
  [33X[0;0YIf  [23XK[123X,  [23XF[123X  are  loops  then  [23X\theta:F\times  F\to  K[123X  is  a  [13Xloop cocycle[113X if
  [23X\theta(x,1_F)=\theta(1_F,x)=1_K[123X  for all [23Xx\in F[123X. In [5XRightQuasigroups[105X, a loop
  cocycle is represented as an [23X|F|\times |F|[123X table with entries in [23X[1..|K|][123X.[133X
  
  [33X[0;0YEvery  nuclear  extension of [23XK[123X by [23XF[123X with [23XK[123X an abelian group is isomorphic to
  the      loop     [23X(K\times     F,\circ)[123X,     where     [23X(a,x)\circ(b,y)     =
  (a\phi_x(b)\theta(x,y),xy)[123X  for  some  homomorphism [23X\phi:F\to\mathrm{Aut}(K)[123X
  and some loop cocycle [23X\theta:F\times F\to K[123X.[133X
  
  [33X[0;0YEvery  central  extension  of  [23XK[123X  by  [23XF[123X  is  isomorphic to the loop [23X(K\times
  F,\circ)[123X,  where  [23X(a,x)\circ(b,y) = (ab\theta(x,y),xy)[123X for some loop cocycle
  [23X\theta:F\times F\to K[123X. This loop will also be denoted by [23XK\times_\theta F[123X.[133X
  
  [1X6.4-1 IsLoopCocycle[101X
  
  [33X[1;0Y[29X[2XIsLoopCocycle[102X( [3XK[103X, [3XF[103X, [3Xtheta[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[10Xtrue[110X if [3Xtheta[103X is a loop cocycle from [3XF[103X to [3XK[103X, else returns [10Xfalse[110X. A
            loop  cocycle  is  an [23X|F|\times |F|[123X table with entries in [23X[1..|K|][123X
            such  that  all entries in the row and in the column corresponding
            to the neutral element of [23XF[123X are equal to the neutral element of [23XK[123X.[133X
  
  [1X6.4-2 LoopByNuclearExtension[101X
  
  [33X[1;0Y[29X[2XLoopByNuclearExtension[102X( [3XK[103X, [3XF[103X, [3Xphi[103X, [3Xtheta[103X[, [3XconstructorStyle[103X] ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe nuclear extension of the abelian group [3XK[103X by the loop [3XF[103X via the
            homomorphism   [3Xphi[103X  and  cocycle  [3Xtheta[103X.  The  arguments  must  be
            formatted  as  follows: [3XK[103X is a commutative and associative loop of
            size  [10XnK[110X,  [3XF[103X  is  a  loop  of  size [10XnF[110X, [3Xphi[103X is a list of length [10XnF[110X
            consisting  of  permutations of [10X[1..nK][110X (each permutation standing
            for  an  automorphism  of  [3XK[103X),  [3Xtheta[103X  is  an [10XnF[110X by [10XnF[110X matrix with
            entries  in  [10X[1..nK][110X.  We  also  support  giving  the  first  four
            arguments as a list. The loop is returned as index based loop with
            the  underlying  set  equal  to  the  carthesian  product  of  the
            underlying  sets of [10XK[110X and [10XF[110X, and with multiplication [10X[a,x]*[b,y] =
            [a * b^phi[x] * theta[x,y], x*y ][110X.[133X
  
  [1X6.4-3 LoopByCentralExtension[101X
  
  [33X[1;0Y[29X[2XLoopByCentralExtension[102X( [3XK[103X, [3XF[103X, [3Xtheta[103X[, [3XconstructorStyle[103X] ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe central extension of the abelian group [3XK[103X by the loop [3XF[103X via the
            cocycle  [3Xtheta[103X.  The format of arguments and of the resulting loop
            are  the same as in [10XLoopByNuclearExtension[110X. We also support giving
            the first three arguments as a list.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XK := AsLoop( CyclicGroup( 4 ) );;[127X[104X
    [4X[25Xgap>[125X [27XF := LoopByCayleyTable( [ [ "a", "b" ], [ "b", "a" ] ] );;[127X[104X
    [4X[25Xgap>[125X [27XAutomorphismGroup( K );[127X[104X
    [4X[28XGroup([ (2,4) ])[128X[104X
    [4X[25Xgap>[125X [27Xphi := [ (), (2,4) ];; # homomorphism from F to Aut( K )[127X[104X
    [4X[25Xgap>[125X [27Xtheta := [ [ 1, 1 ], [ 1, 4 ] ];; # loop cocycle from FxF to K[127X[104X
    [4X[25Xgap>[125X [27XIsLoopCocycle( K, F, theta );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XQ := LoopByNuclearExtension( K, F, phi, theta );[127X[104X
    [4X[28X<loop of size 8>[128X[104X
    [4X[25Xgap>[125X [27XS := NucleusOfLoop( Q );[127X[104X
    [4X[28X<associative loop of size 4>[128X[104X
    [4X[25Xgap>[125X [27XIsNormal( Q, S );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XAsCanonicalPerm( IsomorphismLoops( F, Q/S ) );[127X[104X
    [4X[28X()[128X[104X
    [4X[25Xgap>[125X [27XDisplay( MultiplicationTable( Q ) );[127X[104X
    [4X[28X[ [  1,  2,  3,  4,  5,  6,  7,  8 ],[128X[104X
    [4X[28X  [  2,  7,  8,  5,  6,  3,  4,  1 ],[128X[104X
    [4X[28X  [  3,  4,  5,  6,  7,  8,  1,  2 ],[128X[104X
    [4X[28X  [  4,  1,  2,  7,  8,  5,  6,  3 ],[128X[104X
    [4X[28X  [  5,  6,  7,  8,  1,  2,  3,  4 ],[128X[104X
    [4X[28X  [  6,  3,  4,  1,  2,  7,  8,  5 ],[128X[104X
    [4X[28X  [  7,  8,  1,  2,  3,  4,  5,  6 ],[128X[104X
    [4X[28X  [  8,  5,  6,  3,  4,  1,  2,  7 ] ][128X[104X
    [4X[25Xgap>[125X [27XQ.1; # the underlying set of Q is the carthesian product of underlying sets K x F[127X[104X
    [4X[28Xl[ <identity> of ..., "a" ][128X[104X
    [4X[25Xgap>[125X [27XLoopByCentralExtension( K, F, theta );[127X[104X
    [4X[28X<loop of size 8>[128X[104X
    [4X[25Xgap>[125X [27XCenter( last );[127X[104X
    [4X[28X<associative loop of size 8>[128X[104X
  [4X[32X[104X
  
  [1X6.4-4 AsSquareTable[101X
  
  [33X[1;0Y[29X[2XAsSquareTable[102X( [3Xls[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YIf  [3Xls[103X  is a list of length [10Xn^2[110X for some [10Xn[110X, returns [3Xls[103X as a square
            table, a list of lists of length [10Xn[110X.[133X
  
  [33X[0;0YNote:  This  function  is  convenient  for  transforming row vector cocycles
  obtained  by  [10XLoopCocyclesInVariety[110X and by similar functions to square table
  cocycles required by the [10XLoopByNuclearExtensions[110X function.[133X
  
  [1X6.4-5 NuclearExtensionByNormalSubloop[101X
  
  [33X[1;0Y[29X[2XNuclearExtensionByNormalSubloop[102X( [3XQ[103X, [3XK[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe  parameters  [10X[K,F,phi,theta][110X  for  a nuclear extension of [3XK[103X by
            [3XQ[103X[10X/[110X[3XK[103X.  Here,  [3XK[103X must be a commutative normal subloop of the nucleus
            of  the loop [3XQ[103X. The returned loop [10XK[110X is identical to the argument [3XK[103X
            and the returned factor loop [10XF[110X is identical to [3XQ[103X[10X/[110X[3XK[103X.[133X
  
  [1X6.4-6 CentralExtensionByNormalSubloop[101X
  
  [33X[1;0Y[29X[2XCentralExtensionByNormalSubloop[102X( [3XQ[103X, [3XK[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ythe  parameters  [10X[K,F,theta][110X  for a central extension of [3XK[103X by [3XQ[103X[10X/[110X[3XK[103X.
            Here,  [3XK[103X  must  be  a  subloop  of  the  center of the loop [3XQ[103X. The
            returned  loop  [10XK[110X  is identical to the argument [3XK[103X and the returned
            factor loop [10XF[110X is identical to [3XQ[103X[10X/[110X[3XK[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XQ := MoufangLoop(32,3);;[127X[104X
    [4X[25Xgap>[125X [27XNuc( Q ); # here, the nucleus is commutative and properly contains the center[127X[104X
    [4X[28X<associative loop of size 4>[128X[104X
    [4X[25Xgap>[125X [27XCenter( Q );[127X[104X
    [4X[28X<associative loop of size 2>[128X[104X
    [4X[25Xgap>[125X [27Xext := NuclearExtensionByNormalSubloop( Q, Nuc( Q ) );[127X[104X
    [4X[28X[ <associative loop of size 4>, <Moufang loop of size 8>, [128X[104X
    [4X[28X  [ (), (), (), (2,4), (), (2,4), (2,4), (2,4) ], [128X[104X
    [4X[28X  [ [ 1, 1, 1, 1, 1, 1, 1, 1 ], [ 1, 1, 1, 1, 1, 1, 3, 3 ], [128X[104X
    [4X[28X      [ 1, 3, 1, 1, 3, 1, 1, 1 ], [ 1, 1, 1, 1, 3, 1, 1, 3 ], [128X[104X
    [4X[28X      [ 1, 3, 1, 1, 3, 1, 3, 3 ], [ 1, 1, 1, 1, 3, 1, 3, 1 ], [128X[104X
    [4X[28X      [ 1, 3, 1, 1, 1, 1, 1, 3 ], [ 1, 3, 1, 1, 1, 1, 3, 1 ] ] ][128X[104X
    [4X[25Xgap>[125X [27XcopyQ := LoopByNuclearExtension( ext[1],ext[2],ext[3],ext[4] );;[127X[104X
    [4X[25Xgap>[125X [27XAsCanonicalPerm( IsomorphismLoops( Q, copyQ ) );[127X[104X
    [4X[28X(4,9,11,28,29,24,22,21,20,25,27,12,13,8,6,5)(7,10)(14,30)(15,31)(16,32)(23,26)[128X[104X
    [4X[25Xgap>[125X [27Xext := CentralExtensionByNormalSubloop( Q, Center( Q ) );;[127X[104X
    [4X[25Xgap>[125X [27XcopyQ := LoopByCentralExtension( ext );; # extension can also be given as a list[127X[104X
    [4X[25Xgap>[125X [27XAsCanonicalPerm( IsomorphismLoops( Q, copyQ ) );[127X[104X
    [4X[28X()[128X[104X
  [4X[32X[104X
  
  
  [1X6.5 [33X[0;0YAll central extensions in a variety of loops[133X[101X
  
  [33X[0;0YIf a loop [23XQ[123X has a nontrivial center, it is a central extension of an abelian
  group  [23XK[123X  of  order  [23Xp[123X  by  a loop [23XF[123X of order [23X|Q|/p[123X. The following functions
  construct  all  central extensions of the cyclic group of order [23Xp[123X by a given
  loop [23XF[123X in a given variety of loops.[133X
  
  [33X[0;0YJust  like  all  [23Xp[123X-groups  are  centrally  nilpotent, all [23Xp[123X-loops in certain
  varieties  of  loops  (e.g.,  Moufang  loops)  are  centrally nilpotent. The
  following functions therefore allow us in principle to construct all [23Xp[123X-loops
  of small orders in such varieties.[133X
  
  [33X[0;0YThe enveloping variety is specified as a finite list of loop identities that
  the built-in parser can understand (see Section [14X7.1[114X).[133X
  
  [33X[0;0YGiven  a  variety  [23XV[123X,  an  abelian  group  [23XK\in  V[123X  and  a  loop [23XF\in V[123X, let
  [23X\mathrm{Coc}_V(F,K)[123X  be  the  vector space of cocycles [23X\theta:F\times F\to K[123X
  such that the central extension [23XK\times_\theta F[123X is a loop in [23XV[123X.[133X
  
  [33X[0;0YThe  vector  space  of  coboundaries [23X\mathrm{Cob}_V(F,K)[123X is generated by the
  cocycles   [23X\theta:F\times   F\to   (K,+)[123X   of   the   form   [23X\theta(x,y)   =
  f(xy)-f(x)-f(y)[123X, where [23Xf:F\to\mathbb K[123X satisfies [23Xf(1)=0[123X.[133X
  
  [33X[0;0YIf    [23X\theta,\mu\in\mathrm{Coc}_V(F,K)[123X    then    the   central   extensions
  [23XK\times_\theta  F[123X  and [23XK\times_\mu F[123X are isomorphic if [23X\theta[123X and [23X\mu[123X differ
  by a coboundary, that is, [23X\theta-\mu\in\mathrm{Cob}_V(F,K)[123X.[133X
  
  [33X[0;0YFinally,   the  group  [23XG=\mathrm{Aut}(K)\times\mathrm{Aut}(F)[123X  acts  on  the
  cohomology  group [23X\mathrm{Coc}_V(F,K)/\mathrm{Cob}_V(F,K)[123X (details ommitted)
  and  two central extensions are isomorphic if their cocycles lie in the same
  orbit of [23XG[123X.[133X
  
  [33X[0;0YIn  [5XRightQuasigroups[105X,  the  elements  of  [23X\mathrm{Coc}_V(F,\mathbb  Z_p)[123X are
  represented   as  vectors  of  length  [23X|F|^2[123X  with  entries  in  [23XGF(p)[123X.  (In
  particular, a cocycle from [23X\mathrm{Coc}_V(F,\mathbb Z_p)[123X must be transformed
  into    a    square   matrix   to   be   suitable   as   an   argument   for
  [10XLoopByCentralExtension[110X.)[133X
  
  [1X6.5-1 LoopCocyclesInVariety[101X
  
  [33X[1;0Y[29X[2XLoopCocyclesInVariety[102X( [3XF[103X, [3Xp[103X, [3XequationalBasis[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya  basis  of the vector space of cocycles [23X\mathrm{Coc}_V(F,\mathbb
            Z_p)[123X,  where [3XF[103X is a loop, [3Xp[103X is a prime and [23XV[123X is a variety of loops
            defined  by  the  list  of  loop identities [3XequationalBasis[103X. It is
            checked  that  all  identities  of  [3XequationalBasis[103X  hold  in  the
            (multiplicative)  cyclic  group of order [3Xp[103X and in the loop [3XF[103X, else
            en error message is generated.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF := AsLoop( Group( (1,2), (3,4) ) );; # the Klein group[127X[104X
    [4X[25Xgap>[125X [27Xcoc := LoopCocyclesInVariety( F, 2, [ "x*(y*(x*z)) = (x*(y*x))*z" ] );; # basis of left Bol cocycles[127X[104X
    [4X[25Xgap>[125X [27XLength( coc ); # dimension of the vector space of cocycles[127X[104X
    [4X[28X6[128X[104X
    [4X[25Xgap>[125X [27Xtheta := coc[3];; Display( theta ); # one cocycle[127X[104X
    [4X[28X[ 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2), [128X[104X
    [4X[28XZ(2)^0, Z(2)^0, 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2), 0*Z(2) ][128X[104X
    [4X[25Xgap>[125X [27Xtheta := List( theta, x -> IntFFE( x ) + 1 );; Display( theta ); # converting cocycle entries to [1..Size(K)][127X[104X
    [4X[28X[ 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1 ][128X[104X
    [4X[25Xgap>[125X [27Xtheta := AsSquareTable( theta );; Display( theta ); # converting cocycle to square table[127X[104X
    [4X[28X[ [  1,  1,  1,  1 ],[128X[104X
    [4X[28X  [  1,  1,  1,  1 ],[128X[104X
    [4X[28X  [  1,  2,  2,  1 ],[128X[104X
    [4X[28X  [  1,  1,  1,  1 ] ][128X[104X
    [4X[25Xgap>[125X [27XQ := LoopByCentralExtension( AsLoop( CyclicGroup(2) ), F, theta );[127X[104X
    [4X[28X<loop of size 8>[128X[104X
    [4X[25Xgap>[125X [27XIsLeftBolLoop( Q );[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X6.5-2 LoopCoboundaries[101X
  
  [33X[1;0Y[29X[2XLoopCoboundaries[102X( [3XF[103X, [3Xp[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya     basis     of    the    vector    space    of    coboundaries
            [23X\mathrm{Cob}_V(F,\mathbb Z_p)[123X, where [3XF[103X is a loop and [3Xp[103X is a prime.
            Note that [23XV[123X is irrelevant here.[133X
  
  [1X6.5-3 LoopCocyclesModAction[101X
  
  [33X[1;0Y[29X[2XLoopCocyclesModAction[102X( [3XF[103X, [3Xp[103X, [3Xcoc[103X, [3Xcob[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YGiven   a  loop  [3XF[103X,  prime  [3Xp[103X,  basis  [3Xcoc[103X  of  the  vector  space
            [23X\mathrm{Coc}_V(F,\mathbb  Z_p)[123X and a basis [3Xcob[103X of the vector space
            [23X\mathrm{Cob}_V(F,\mathbb  Z_p)[123X,  returns  a  list of cocycles from
            [23X\mathrm{Coc}_V(F,\mathbb    Z_p)[123X,   one   from   each   orbit   of
            [23X\mathrm{Aut}(\mathbb   Z_p)\times\mathrm{Aut}(F)[123X   acting  on  the
            cohomology              group             [23X\mathrm{Coc}_V(F,\mathbb
            Z_p)/\mathrm{Cob}_V(F,\mathbb  Z_p)[123X.  Once  the central extensions
            corresponding to the cocycles are constructed, they are guaranteed
            to  contain  all central extensions of [23X\mathbb Z_p[123X by [23X\mathbb F[123X up
            to isomorphism (with possible duplications).[133X
  
  [1X6.5-4 AllLoopCocyclesInVariety[101X
  
  [33X[1;0Y[29X[2XAllLoopCocyclesInVariety[102X( [3XF[103X, [3Xp[103X, [3XequationalBasis[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YGiven   a   loop  [3XF[103X,  prime  [3Xp[103X  and  a  list  of  loop  identities
            [3XequationalBasis[103X  defining  a variety [23XV[123X, returns a list of cocycles
            from  [23X\mathrm{Coc}_V(F,\mathbb Z_p)[123X modulo coboundaries and modulo
            the action described in [10XLoopCocyclesModAction[110X.[133X
  
  [1X6.5-5 AllLoopCentralExtensionsInVariety[101X
  
  [33X[1;0Y[29X[2XAllLoopCentralExtensionsInVariety[102X( [3XF[103X, [3Xp[103X, [3XequationalBasis[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya  list  of  loops constructed as central extensions of the cyclic
            group  of  order  [3Xp[103X  by  the  loop  [3XF[103X via the cocycles obtained by
            [10XAllLoopCocyclesInVariety(  [110X[3XF[103X[10X,  [110X[3Xp[103X[10X,  [110X[3XequationalBasis[103X[10X )[110X. The returned
            list is guaranteed to contain all central extensions of the cyclic
            group  of order [3Xp[103X by the loop [3XF[103X in the variety of loops defined by
            the  identities  [3XequationalBasis[103X,  but  it might contain duplicate
            loops of the same isomorphism type. (See [10XLoopsUpToIsomorphism[110X.)[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XF := AsLoop( Group( (1,2), (3,4 ) ) );; # Klein group[127X[104X
    [4X[25Xgap>[125X [27Xcoc := LoopCocyclesInVariety( F, 2, [ "x*(y*(x*z)) = (x*(y*x))*z" ] );; Length( coc ); # basis of left Bol cocycles[127X[104X
    [4X[28X6[128X[104X
    [4X[25Xgap>[125X [27Xcob := LoopCoboundaries( F, 2 );; Length( cob ); # basis of coboundaries[127X[104X
    [4X[28X1[128X[104X
    [4X[25Xgap>[125X [27XLength( LoopCocyclesModAction( F, 2, coc, cob ) ); # cocycles modulo coboundaries and action of Aut(K)x Aut(F)[127X[104X
    [4X[28X10[128X[104X
    [4X[25Xgap>[125X [27XLength( AllLoopCocyclesInVariety( F, 2, [ "x*(y*(x*z)) = (x*(y*x))*z" ] ) ); # the same in one step[127X[104X
    [4X[28X#I  RQ: Calculating coboundaries[128X[104X
    [4X[28X#I  RQ: Coboundaries have dimension 1[128X[104X
    [4X[28X#I  RQ: Calculating cocycles[128X[104X
    [4X[28X#I  RQ: Cocycles have dimension 6[128X[104X
    [4X[28X10[128X[104X
    [4X[25Xgap>[125X [27Xlps := AllLoopCentralExtensionsInVariety( F, 2, [ "x*(y*(x*z)) = (x*(y*x))*z" ] );; Length( lps ); # all central extensions in one step[127X[104X
    [4X[28X#I  RQ: Calculating coboundaries[128X[104X
    [4X[28X#I  RQ: Coboundaries have dimension 1[128X[104X
    [4X[28X#I  RQ: Calculating cocycles[128X[104X
    [4X[28X#I  RQ: Cocycles have dimension 6[128X[104X
    [4X[28X10[128X[104X
    [4X[25Xgap>[125X [27XForAll( lps, IsLeftBolLoop );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XLength( LoopsUpToIsomorphism( lps ) ); # filtering up to isomorphism (no isomorphisms in this example)[127X[104X
    [4X[28X10[128X[104X
  [4X[32X[104X
  
  
  [1X6.6 [33X[0;0YFrattini subalgebra[133X[101X
  
  [33X[0;0YFor  a  finite algebra [23XQ[123X the [13XFrattini subalgebra[113X [23X\Phi(Q)[123X is the intersection
  of  all  maximal subalgebras of [23XQ[123X. It is precisely the set of [13Xnon-generators[113X
  of  [23XQ[123X,  i.e.,  elements  [23Xx\in Q[123X such that whenever [23XQ=\langle S,x\rangle[123X then
  [23XQ=\langle S\rangle[123X.[133X
  
  [33X[0;0YThe Frattini subalgebra might be empty if [23XQ[123X is a quasigroup. If [23XQ[123X is a loop,
  the  [23X\Phi(Q)[123X  is  a  subloop  of  [23XQ[123X,  the [13XFrattini subloop[113X of [23XQ[123X. When [23XQ[123X is a
  nilpotent  loop,  then [23X\Phi(Q)[123X is a normal subloop of [23XQ[123X. If [23XQ[123X is a nilpotent
  [23Xp[123X-loop then [23XQ/\Phi(Q)[123X is isomorphic to a vector space over [23X\mathbb Z_p[123X whose
  dimension is the size of a minimal generating subset of [23XQ[123X.[133X
  
  [33X[0;0YWhen  [23XQ[123X  is a loop with nilpotent multiplication group [23X\mathrm{Mlt}(Q)[123X, then
  [23X\Phi(Q)[123X is the orbit of [23X\Phi(\mathrm{Mlt}(Q))[123X containing [23X1[123X.[133X
  
  [1X6.6-1 FrattiniSubrightquasigroup[101X
  
  [33X[1;0Y[29X[2XFrattiniSubrightquasigroup[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe  Frattini  subrightquasigroup  (possibly  empty)  of the right
            quasigroup [10XQ[110X.[133X
  
  [1X6.6-2 FrattiniSubquasigroup[101X
  
  [33X[1;0Y[29X[2XFrattiniSubquasigroup[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe Frattini subquasigroup (possibly empty) of the quasigroup [10XQ[110X.[133X
  
  [1X6.6-3 FrattiniSubloop[101X
  
  [33X[1;0Y[29X[2XFrattiniSubloop[102X( [3XQ[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ythe Frattini subloop of the loop [10XQ[110X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XQ := MoufangLoop(64,5);[127X[104X
    [4X[28XMoufangLoop( 64, 5 )[128X[104X
    [4X[25Xgap>[125X [27XF := FrattiniSubloop(Q);[127X[104X
    [4X[28X<Moufang loop of size 8>[128X[104X
    [4X[25Xgap>[125X [27XExponent(Q/F);[127X[104X
    [4X[28X2[128X[104X
    [4X[25Xgap>[125X [27XFrattiniSubrightquasigroup( ProjectionRightQuasigroup([1,2]) );[127X[104X
    [4X[28X[  ][128X[104X
  [4X[32X[104X
  
